apply plugin: 'java'

repositories {
    maven {
        name "jpmc-public"
        url "http://repo-proxy.jpmchase.net/maven/content/groups/jpmc-public"
    }
}

dependencies {
    //junit 5
    testCompile group: 'org.junit.platform', name: 'junit-platform-launcher', version: '1.4.2'
    testImplementation('org.junit.jupiter:junit-jupiter-api:5.4.2')
    testRuntime "org.junit.jupiter:junit-jupiter-engine:5.4.2"
}

buildscript {

    repositories {
        maven {
            name "jpmc-public"
            url "http://repo-proxy.jpmchase.net/maven/content/groups/jpmc-public"
        }
        mavenLocal()

        maven {
            name = 'repoUnderProjectRoot'
            url = uri("$buildDir/../../build/repo")
        }
    }

    dependencies {
        classpath 'com.jpmorgan.java.lint:plugin:0.0.4-SNAPSHOT'
    }
}

apply plugin: com.jpmorgan.java.lint.LintTestsPlugin

test{
    useJUnitPlatform() //enable junit5

    lint{ //rename to lintAssert
        packageName = "com.jpmorgan.java.lint" //optional or scan all
        verbose = true //optional, defaults to false
        // + mode = info //info, warn, error - warn/fail if mode is warn/error if 0 asserts
        // + don't require asserts in tests with @Expected exception
        // + don't validate tests with @Ignore
        // + maxAssertsThreshold = 10 //defaults to 10 - warn/fail if mode is warn/error if above threshhold
        // + console - make package.class.method "clickable" and navigate to the location
        // + print the summary: PASS/FAIL
        // + allow users to specify additional test frameworks
        // + !ratio of # of assert to the size of the "method under test" and number of its conditions !
    }
}
