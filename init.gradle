


import org.gradle.internal.os.OperatingSystem
def aimRoot = OperatingSystem.current().isWindows() ? 'c:/aim/gfs/' : '/aim/gfs/'
logger.lifecycle('aim_root {}', aimRoot)

apply plugin:EnterpriseRepositoryPlugin

class EnterpriseRepositoryPlugin implements Plugin<Gradle> {

    private static String JPMC_PUBLIC = "https://repo-proxy.jpmchase.net/maven/content/groups/jpmc-public"

    void apply(Gradle gradle) { 
		gradle.allprojects{ project ->
            project.repositories {
                // Remove all repositories not pointing to the enterprise repository url
                all { ArtifactRepository repo ->
                    if (!(repo instanceof MavenArtifactRepository) ||
                          repo.url.toString() != JPMC_PUBLIC) {
                        project.logger.lifecycle "Repository ${repo.url} removed. Only $JPMC_PUBLIC is allowed"
                        remove repo
                    } else {
						project.logger.lifecycle "Another repo ${repo.name}"
					}
                }

                // add the enterprise repository
                maven {
					mavenLocal()
                    name "jpmc-public"
                    url JPMC_PUBLIC
                }
            }
        }
    }
}