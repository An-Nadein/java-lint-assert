
// gradle -q modules

allprojects {
    apply plugin: 'idea'
    apply plugin: 'java'
    task modules {
        doLast { task ->
            println "I'm $task.project.name"
        }
    }

    repositories {
        maven {
            name "jpmc-public"
            url "http://repo-proxy.jpmchase.net/maven/content/groups/jpmc-public"
        }
    }
}

buildscript {
    repositories {
        maven {
            url 'http://repo-proxy.jpmchase.net/maven/content/groups/jpmc-public'
        }
    }
    dependencies {
        classpath 'net.researchgate:gradle-release:2.4.1'
        classpath "org.sonarsource.scanner.gradle:sonarqube-gradle-plugin:2.5"
    }
}

subprojects{

    apply plugin: 'jacoco'
    apply plugin: 'maven'
    apply plugin: 'org.sonarqube'
    apply plugin: 'net.researchgate.release'


    jacoco {
        toolVersion = '0.7.8'
    }

    jacocoTestReport {
        group = "Reporting"
        reports {
            xml.enabled true
            csv.enabled false
            html.destination "${buildDir}/reports/coverage"
        }
    }
    configurations {
        deployerJars
    }
    uploadArchives {
        repositories.mavenDeployer {
            configuration = configurations.deployerJars
            repository(url: "https://repo.jpmchase.net/maven/content/repositories/SANDBONI") {
                authentication(userName: project.findProperty('frsUser'), password: project.findProperty('frsPassword'))
            }
            snapshotRepository(url: "https://repo.jpmchase.net/maven/content/repositories/SANDBONI-SNAPSHOT") {
                authentication(userName: project.findProperty('frsUser'), password: project.findProperty('frsPassword'))
            }
        }
    }

    task copyProjectDependencies(type: Copy, dependsOn: build) {
        into "build/dependencies"
        from configurations.runtime
    }

    release {
        preCommitText = "${project.findProperty('jiraNumber')}: Gradle FRS upload"

        git {
            requireBranch = ''
        }
    }

    afterReleaseBuild.dependsOn uploadArchives

    jar {
        manifest {
            attributes 'Implementation-Version': project.properties['version']
        }
    }

}



